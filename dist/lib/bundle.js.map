{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./beatmaps/test_beatmap.js","webpack:///./lib/game.js","webpack:///./lib/gameplay.js","webpack:///./lib/note.js","webpack:///./lib/pressed_key.js","webpack:///./lib/qwert.js","webpack:///./lib/top_keys.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;;;;;;;AChIA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA;AACA,yBAAyB,KAAG,IAAI,KAAM;AACtC;AACA;AACA;AACA;AACA;AACA,yBAAyB,KAAG,IAAI,KAAM;AACtC;AACA;AACA;AACA;AACA;AACA,yBAAyB,KAAG,IAAI,KAAM;AACtC;AACA;AACA;AACA;AACA;AACA,yBAAyB,KAAG,IAAI,KAAM;AACtC;AACA;AACA;AACA;AACA;AACA,yBAAyB,KAAG,IAAI,KAAM;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,KAAG,IAAI,KAAM;AACtC;AACA;AACA;AACA,yBAAyB,KAAG,IAAI,KAAM;AACtC;AACA;AACA;AACA,yBAAyB,KAAG,IAAI,KAAM;AACtC;AACA;AACA;AACA,yBAAyB,KAAG,IAAI,KAAM;AACtC;AACA;AACA;AACA,yBAAyB,KAAG,IAAI,KAAM;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,mEAAI,E;;;;;;;;;;;;ACjGnB;AAAA;AAAA;AAA6B;AACU;;AAEvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,oDAAU,EAAE,UAAU;AAC5C;AACA;;AAEA;AACA;AACA;AACA,oCAAoC,gDAAI,EAAE,wBAAwB;AAClE;AACA;AACA,oCAAoC,gDAAI,EAAE,wBAAwB;AAClE;AACA;AACA,oCAAoC,gDAAI,EAAE,wBAAwB;AAClE;AACA;AACA,oCAAoC,gDAAI,EAAE,wBAAwB;AAClE;AACA;AACA,oCAAoC,gDAAI,EAAE,wBAAwB;AAClE;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,gDAAI,EAAE,wBAAwB;AACrD;AACA;AACA;AACA,uBAAuB,gDAAI,EAAE,yBAAyB;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;;AAEe,uEAAQ,E;;;;;;;;;;;;ACjGvB;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;;AAEe,mEAAI,E;;;;;;;;;;;;AC3CnB;AAAA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEe,yEAAU,E;;;;;;;;;;;;AC9CzB;AAAA;AAAA;AAAA;AAAA;AAA0B;AACQ;AACD;AACc;;AAE/C;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,wBAAwB,iDAAO;AAC/B,yBAAyB,iDAAQ;AACjC,qBAAqB,6CAAI;AACzB;AACA;;;AAGA,CAAC,E;;;;;;;;;;;;ACrBD;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,sEAAO,E","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./lib/qwert.js\");\n","export const beatmap = [\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"q\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"e\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"r\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"t\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"y\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"r\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"y\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"e\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"y\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"y\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"w\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"y\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"t\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"q\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"y\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n    \"e\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\n];","class Game {\n    constructor(gameplay, ctx, beatMap) {\n        this.gameplay = gameplay;\n        this.ctx = ctx;\n        this.beatMap = beatMap;\n        this.qPressed = false;\n        this.wPressed = false;\n        this.ePressed = false;\n        this.rPressed = false;\n        this.tPressed = false;\n        this.keyDownHandler = this.keyDownHandler.bind(this);\n        this.keyUpHandler = this.keyUpHandler.bind(this);\n    }\n\n    addListeners() {\n        document.addEventListener(\"keydown\", this.keyDownHandler, false);\n        document.addEventListener(\"keyup\", this.keyUpHandler, false);\n    }\n\n    \n\n    keyDownHandler(e) {\n        switch (e.key) {\n            case (\"q\" || \"Q\" || \"KeyQ\"):\n                if (this.qPressed == false) {\n                    this.qPressed = true;\n                    this.gameplay.addPressedKey(this.ctx, \"q\");\n                }\n                break;\n            case (\"w\" || \"W\" || \"KeyW\"):\n                if (this.wPressed == false) {\n                    this.wPressed = true;\n                    this.gameplay.addPressedKey(this.ctx,\"w\");\n                }\n                break;\n            case (\"e\" || \"E\" || \"KeyE\"):\n                if (this.ePressed == false) {\n                    this.ePressed = true;\n                    this.gameplay.addPressedKey(this.ctx,\"e\");\n                }\n                break;\n            case (\"r\" || \"R\" || \"KeyR\"):\n                if (this.rPressed == false) {\n                    this.rPressed = true;\n                    this.gameplay.addPressedKey(this.ctx,\"r\");\n                }\n                break;\n            case (\"t\" || \"T\" || \"KeyT\"):\n                if (this.tPressed == false) {\n                    this.tPressed = true;\n                    this.gameplay.addPressedKey(this.ctx,\"t\");\n                }\n                break;\n        }\n    }\n\n    keyUpHandler(e) {\n        switch (e.key) {\n            case (\"q\" || \"Q\" || \"KeyQ\"):\n                this.qPressed = false;\n                this.gameplay.removePressedKey();\n                break;\n            case (\"w\" || \"W\" || \"KeyW\"):\n                this.wPressed = false;\n                this.gameplay.removePressedKey();\n                break;\n            case (\"e\" || \"E\" || \"KeyE\"):\n                this.ePressed = false;\n                this.gameplay.removePressedKey();\n                break;\n            case (\"r\" || \"R\" || \"KeyR\"):\n                this.rPressed = false;\n                this.gameplay.removePressedKey();\n                break;\n            case (\"t\" || \"T\" || \"KeyT\"):\n                this.tPressed = false;\n                this.gameplay.removePressedKey();\n                this.gameplay.addNote1();\n                this.gameplay.addNote2();\n                break;\n        }\n    }\n\n    addBeatmap(beatmap){\n        beatmap.forEach((beat) => {\n            this.gameplay.addNote(beat);\n        });\n    }\n\n    draw() {\n        this.gameplay.drawPressedKeys(this.ctx);\n        this.gameplay.drawNotes(this.ctx);\n        this.gameplay.runMap();\n        requestAnimationFrame(this.draw.bind(this));\n    }\n}\n\nexport default Game;","import Note from './note.js';\nimport PressedKey from './pressed_key';\n\nclass Gameplay {\n    constructor(topKeys) {\n        this.notes = [];\n        this.pressedKeys = [];\n        this.topKeys = topKeys;\n    }\n\n    addPressedKey(ctx, val) {\n        let key = new PressedKey({ val: val});\n        this.pressedKeys.push(key);\n    }\n\n    addNote(key) {\n        switch(key) {\n            case \"q\":\n                this.notes.push(new Note({pos: [50,800], val: \"q\"}));\n                break;\n            case \"w\":\n                this.notes.push(new Note({pos: [50,800], val: \"q\"}));\n                break;\n            case \"e\":\n                this.notes.push(new Note({pos: [50,800], val: \"q\"}));\n                break;\n            case \"r\":\n                this.notes.push(new Note({pos: [50,800], val: \"q\"}));\n                break;\n            case \"t\":\n                this.notes.push(new Note({pos: [50,800], val: \"q\"}));\n                break;\n        }\n    }\n\n    // addNote(key) {\n    addNote1() {\n        debugger\n        let note = new Note({pos: [50,400], val: \"q\"});\n        this.notes.push(note);\n    }\n    addNote2() {\n        let note = new Note({pos: [160,500], val: \"w\"});\n        this.notes.push(note);\n    }\n\n    drawPressedKeys(ctx){\n        ctx.clearRect(0, 0, 600, 717);\n        this.topKeys.draw(ctx);\n        this.pressedKeys.forEach((key) => {\n            key.draw(ctx);\n        });\n        this.checkSuccess();\n    }\n\n    drawNotes(ctx){\n        // ctx.clearRect(0, 0, 600, 717);\n        this.notes.forEach((note) => {\n            note.draw(ctx);\n        });\n    }\n\n    removePressedKey() {\n        debugger\n        this.pressedKeys.splice(0,1);\n    }\n\n    removeNote(note) {\n        this.notes.splice(this.notes.indexOf(note),1);\n    }\n\n    checkSuccess() {\n        this.pressedKeys.forEach((pressedKey) => {\n            this.notes.forEach((note) => {\n                debugger\n                if (pressedKey.successHit(note)) {\n                    debugger\n                    this.removeNote(note);\n                    console.log(\"Score + 10!\");\n                }\n                debugger\n            });\n        });\n    }\n\n    missed(note) {\n        return (note.pos[1] < -20) ? true : false;\n    }\n\n    runMap() {\n        this.notes.forEach((note) => {\n            return (this.missed(note)) ? this.removeNote(note) : note.move();\n        });\n    }\n\n}\n\nexport default Gameplay;","class Note {\n    constructor(props) {\n        this.pos = props.pos;\n        this.val = props.val;\n        this.squareWidth = 60;\n        this.squareHeight = 60;\n    }\n    \n    move () {\n        this.pos = [this.pos[0], this.pos[1] - 10];\n    }\n    \n    draw(ctx) {\n        debugger\n        ctx.beginPath();\n        ctx.moveTo(this.pos[0], this.pos[1]);\n        ctx.lineTo(this.pos[0] + this.squareWidth, this.pos[1]);\n        ctx.quadraticCurveTo(this.pos[0] + this.squareWidth + 10, this.pos[1], this.pos[0] + this.squareWidth + 10, this.pos[1] + 10);\n        ctx.lineTo(this.pos[0] + this.squareWidth + 10, this.pos[1] + this.squareHeight);\n        ctx.quadraticCurveTo(this.pos[0] + this.squareWidth + 10, this.pos[1] + this.squareHeight + 10, this.pos[0] + this.squareWidth, this.pos[1] + this.squareHeight + 10);\n        ctx.lineTo(this.pos[0], this.pos[1] + this.squareHeight + 10);\n        ctx.quadraticCurveTo(this.pos[0] - 10, this.pos[1] + this.squareHeight + 10, this.pos[0] - 10, this.pos[1] + this.squareHeight);\n        ctx.lineTo(this.pos[0] - 10, this.pos[1] + 10);\n        ctx.quadraticCurveTo(this.pos[0] - 10, this.pos[1], this.pos[0], this.pos[1]);\n        if (this.val == \"q\") {\n            ctx.fillStyle = \"#202833\";\n        } else if (this.val == \"w\") {\n            ctx.fillStyle = \"#C5C6C8\";\n        } else if (this.val == \"e\") {\n            ctx.fillStyle = \"#F76D6D\";\n        } else if (this.val == \"r\") {\n            ctx.fillStyle = \"white\";\n        } else {\n            ctx.fillStyle = \"black\";\n        }\n        ctx.fill();\n        ctx.closePath();\n    }\n\n\n\n}\n\nexport default Note;","class PressedKey {\n    constructor(props) {\n        this.val = props.val;\n        if (this.val == \"q\") {\n            this.pos = [50,10];\n        } else if (this.val == \"w\") {\n            this.pos = [160,10];\n        } else if (this.val == \"e\") {\n            this.pos = [270,10];\n        } else if (this.val == \"r\") {\n            this.pos = [380,10];\n        } else if (this.val == \"t\") {\n            this.pos = [490,10];\n        }\n        this.squareWidth = 60;\n        this.squareHeight = 60;\n    }\n\n    draw(ctx) {\n        ctx.fillStyle =\"#67FCF1\";\n        ctx.beginPath();\n        ctx.moveTo(this.pos[0], this.pos[1]);\n        ctx.lineTo(this.pos[0] + this.squareWidth, this.pos[1]);\n        ctx.quadraticCurveTo(this.pos[0] + this.squareWidth + 10, this.pos[1], this.pos[0] + this.squareWidth + 10, this.pos[1] + 10);\n        ctx.lineTo(this.pos[0] + this.squareWidth + 10, this.pos[1] + this.squareHeight);\n        ctx.quadraticCurveTo(this.pos[0] + this.squareWidth + 10, this.pos[1] + this.squareHeight + 10, this.pos[0] + this.squareWidth, this.pos[1] + this.squareHeight + 10);\n        ctx.lineTo(this.pos[0], this.pos[1] + this.squareHeight + 10);\n        ctx.quadraticCurveTo(this.pos[0] - 10, this.pos[1] + this.squareHeight + 10, this.pos[0] - 10, this.pos[1] + this.squareHeight);\n        ctx.lineTo(this.pos[0] - 10, this.pos[1] + 10);\n        ctx.quadraticCurveTo(this.pos[0] - 10, this.pos[1], this.pos[0], this.pos[1]);\n        ctx.fill();\n    }\n\n    successHit(note) {\n        debugger\n        if (((note.pos[1] < (this.pos[1] + this.squareHeight/2)) && (note.pos[1] > (this.pos[1] - this.squareHeight/2))) && this.val == note.val){\n            debugger\n            return true;\n        } else {\n            debugger\n            return false;\n        }\n    }\n\n}\n\nexport default PressedKey;","import Game from './game';\nimport Gameplay from './gameplay';\nimport TopKeys from './top_keys';\nimport beatmap from '../beatmaps/test_beatmap';\n\nif (document.readyState !== 'loading') {\n    console.log ('already loaded');\n}\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const canvas = document.getElementById(\"myCanvas\");\n    const ctx = canvas.getContext(\"2d\");\n    ctx.canvas.height = window.innerHeight;\n    const topKeys = new TopKeys(ctx);\n    const gameplay = new Gameplay(topKeys);\n    const game = new Game(gameplay, ctx);\n    game.addListeners();\n    game.draw();\n\n    \n});","class TopKeys {\n    constructor(ctx) {\n        this.qPos = [50,10];\n        this.wPos = [160,10];\n        this.ePos = [270,10];\n        this.rPos = [380,10];\n        this.tPos = [490,10];\n        this.squareX = 50;\n        this.squareY = 10;\n        this.squareWidth = 60;\n        this.squareHeight = 60;\n        this.ctx = ctx;\n    }\n\n    draw(ctx) {\n\n        ctx.clearRect(0, 0, 600, 717);\n        for (let i = 0; i < 5; i++) {\n            // ctx.font = \"500 px Arial\";\n            switch(i) {\n                case 0:\n                    this.squareX = 50;\n                    break;\n                case 1:\n                    this.squareX = 160;\n                    break;\n                case 2:\n                    this.squareX = 270;\n                    break;\n                case 3:\n                    this.squareX = 380;\n                    break;\n                case 4:\n                    this.squareX = 490;\n                    break;\n            }\n            ctx.beginPath();\n            ctx.moveTo(this.squareX, this.squareY);\n            ctx.lineTo(this.squareX + this.squareWidth, this.squareY);\n            ctx.quadraticCurveTo(this.squareX + this.squareWidth + 10, this.squareY, this.squareX + this.squareWidth + 10, this.squareY + 10);\n            ctx.lineTo(this.squareX + this.squareWidth + 10, this.squareY + this.squareHeight);\n            ctx.quadraticCurveTo(this.squareX + this.squareWidth + 10, this.squareY + this.squareHeight + 10, this.squareX + this.squareWidth, this.squareY + this.squareHeight + 10);\n            ctx.lineTo(this.squareX, this.squareY + this.squareHeight + 10);\n            ctx.quadraticCurveTo(this.squareX - 10, this.squareY + this.squareHeight + 10, this.squareX - 10, this.squareY + this.squareHeight);\n            ctx.lineTo(this.squareX - 10, this.squareY + 10);\n            ctx.quadraticCurveTo(this.squareX - 10, this.squareY, this.squareX, this.squareY);\n            ctx.strokeStyle = \"#67FCF1\";\n            ctx.stroke();\n            ctx.fillStyle = \"#67FCF1\";\n            ctx.fillText(\"Q\", 600 / 5 - 60, 60);\n            ctx.fillText(\"W\", 600 * 2 / 5 - 70, 60);\n            ctx.fillText(\"E\", 600 * 3 / 5 - 80, 60);\n            ctx.fillText(\"R\", 600 * 4 / 5 - 90, 60);\n            ctx.fillText(\"T\", 600 - 95, 60);\n            ctx.closePath();\n        }\n    }\n}\n\nexport default TopKeys;"],"sourceRoot":""}